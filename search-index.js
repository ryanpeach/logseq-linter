var searchIndex = new Map(JSON.parse('[\
["logseq_linter",{"doc":"The entry point of the program.","t":"FNNNNNNONNNNNNHCONNNNN","n":["Args","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","count","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","into","main","meilisearch","name","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut"],"q":[[0,"logseq_linter"],[22,"clap_builder::builder::command"],[23,"core::fmt"],[24,"core::fmt"],[25,"clap_builder"],[26,"core::result"],[27,"clap_builder::util::id"],[28,"core::option"],[29,"core::any"]],"d":["Simple program to greet a person","","","","","","","Number of times to greet","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","Meilisearch is a powerful, fast, open-source, easy to use â€¦","Name of the person to greet","","","","",""],"i":[0,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,2,2,2,2,2,2],"f":"`{bb}0{ce{}{}}0{{}b}0`{{df}h}{cc{}}{j{{n{dl}}}}0{{}{{Ab{A`}}}}5{{}Ad}``{c{{n{e}}}{}{}}0{cAf{}}{{dj}{{n{Adl}}}}0","c":[],"p":[[5,"Command",22],[5,"Args",0],[5,"Formatter",23],[8,"Result",23],[5,"ArgMatches",24],[8,"Error",25],[6,"Result",26],[5,"Id",27],[6,"Option",28],[1,"unit"],[5,"TypeId",29]],"b":[]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
